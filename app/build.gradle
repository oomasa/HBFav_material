apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.cookpad.android.licensetools'
apply plugin: 'spoon'
apply plugin: 'io.fabric'

android {
    signingConfigs {
        releaseConfig
    }

    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "me.rei_m.hbfavmaterial"
        minSdkVersion 16
        targetSdkVersion 27
        multiDexEnabled true
        versionCode 12
        versionName "1.2.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "d"
            ext.enableCrashlytics = false
        }
        release {
            signingConfig signingConfigs.releaseConfig
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        androidTest.java.srcDirs += 'src/androidTest/kotlin'

        test.java.srcDirs += 'src/test/kotlin'
    }

    if (project.hasProperty('storeFile')) {
        android.signingConfigs.releaseConfig.storeFile = file(storeFile)
    }
    if (project.hasProperty('storePassword')) {
        android.signingConfigs.releaseConfig.storePassword = storePassword
    }
    if (project.hasProperty('keyAlias')) {
        android.signingConfigs.releaseConfig.keyAlias = keyAlias
    }
    if (project.hasProperty('keyPassword')) {
        android.signingConfigs.releaseConfig.keyPassword = keyPassword
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/app_debug.kotlin_module'
    }

    dataBinding {
        enabled = true
    }

    testBuildType "debug"
}

dependencies {
    ext.android_support_lib_version = '27.0.1'
    ext.rx_android_kotlin_version = '2.0.0'
    ext.retrofit_version = '2.3.0'
    ext.okhttp_version = '3.9.1'
    ext.dagger_version = '2.13'
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'com.android.support:multidex:1.0.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$android_support_lib_version"
    implementation "com.android.support:support-v4:$android_support_lib_version"
    implementation "com.android.support:design:$android_support_lib_version"
    implementation "com.android.support:support-annotations:$android_support_lib_version"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.3'

    implementation "android.arch.lifecycle:extensions:1.0.0"
    testImplementation "android.arch.core:core-testing:1.0.0"
    implementation "android.arch.lifecycle:reactivestreams:1.0.0"

    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    kapt 'com.android.databinding:compiler:3.1.3'

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    implementation 'com.google.code.gson:gson:2.8.2'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation 'se.akerfeldt:okhttp-signpost:1.1.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation("com.squareup.retrofit2:converter-simplexml:$retrofit_version") {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation 'com.squareup.picasso:picasso:2.5.2'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    androidTestImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation 'org.jsoup:jsoup:1.11.2'

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }
    implementation('com.twitter.sdk.android:twitter:3.2.0@aar') {
        transitive = true;
    }
    implementation 'com.google.firebase:firebase-core:11.6.0'

    testImplementation "org.robolectric:robolectric:3.5.1"
    testImplementation "org.robolectric:shadows-support-v4:3.3.2"

    testImplementation 'junit:junit:4.12'

    testImplementation 'org.mockito:mockito-core:2.12.0'

    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test.espresso:espresso-intents:3.0.1') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test:runner:1.0.1') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test:rules:1.0.1') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation 'org.mockito:mockito-core:2.12.0'
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestImplementation group: 'com.squareup.spoon', name: 'spoon-client', version: '1.7.1'
}

spoon {
    // for debug output
    debug = true

    // To execute the tests device by device */
    sequential = true

    // To grant permissions to Android M >= devices */
    grantAllPermissions = true
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
    maven { url "http://dl.bintray.com/kotlin/kotlinx.dom" }
}

apply plugin: 'com.google.gms.google-services'

kotlin {
    experimental {
        coroutines "enable"
    }
}
